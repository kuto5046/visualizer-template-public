/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_copysignals_free(a: number): void;
export function __wbg_get_copysignals_len(a: number): number;
export function __wbg_set_copysignals_len(a: number, b: number): void;
export function __wbg_get_copysignals_p_a(a: number): number;
export function __wbg_set_copysignals_p_a(a: number, b: number): void;
export function __wbg_get_copysignals_p_b(a: number): number;
export function __wbg_set_copysignals_p_b(a: number, b: number): void;
export function generate(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function __wbg_solinfo_free(a: number): void;
export function __wbg_get_solinfo_error(a: number, b: number): void;
export function __wbg_set_solinfo_error(a: number, b: number, c: number): void;
export function __wbg_get_solinfo_score(a: number): number;
export function __wbg_set_solinfo_score(a: number, b: number): void;
export function __wbg_get_solinfo_max_turn(a: number): number;
export function __wbg_set_solinfo_max_turn(a: number, b: number): void;
export function get_sol_info(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function __wbg_visresult_free(a: number): void;
export function __wbg_get_visresult_svg(a: number, b: number): void;
export function __wbg_set_visresult_svg(a: number, b: number, c: number): void;
export function __wbg_get_visresult_score(a: number): number;
export function __wbg_set_visresult_score(a: number, b: number): void;
export function __wbg_get_visresult_t_sz(a: number): number;
export function __wbg_set_visresult_t_sz(a: number, b: number): void;
export function __wbg_get_visresult_target_idx(a: number): number;
export function __wbg_set_visresult_target_idx(a: number, b: number): void;
export function __wbg_get_visresult_target_v(a: number, b: number): void;
export function __wbg_set_visresult_target_v(a: number, b: number, c: number): void;
export function __wbg_get_visresult_cur_v(a: number): number;
export function __wbg_set_visresult_cur_v(a: number, b: number): void;
export function __wbg_get_visresult_op(a: number, b: number): void;
export function __wbg_set_visresult_op(a: number, b: number, c: number): void;
export function __wbg_get_visresult_a(a: number, b: number): void;
export function __wbg_set_visresult_a(a: number, b: number, c: number): void;
export function __wbg_get_visresult_b(a: number, b: number): void;
export function __wbg_set_visresult_b(a: number, b: number, c: number): void;
export function __wbg_get_visresult_copy_signals(a: number): number;
export function __wbg_set_visresult_copy_signals(a: number, b: number): void;
export function __wbg_get_visresult_initial_comments(a: number, b: number): void;
export function __wbg_set_visresult_initial_comments(a: number, b: number, c: number): void;
export function __wbg_get_visresult_comments(a: number, b: number): void;
export function __wbg_set_visresult_comments(a: number, b: number, c: number): void;
export function visualize(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function gen(a: number, b: number): void;
export function __wbg_ret_free(a: number): void;
export function __wbg_get_ret_score(a: number): number;
export function __wbg_set_ret_score(a: number, b: number): void;
export function __wbg_get_ret_err(a: number, b: number): void;
export function __wbg_set_ret_err(a: number, b: number, c: number): void;
export function __wbg_get_ret_svg(a: number, b: number): void;
export function __wbg_set_ret_svg(a: number, b: number, c: number): void;
export function vis(a: number, b: number, c: number, d: number, e: number): number;
export function get_max_turn(a: number, b: number, c: number, d: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
